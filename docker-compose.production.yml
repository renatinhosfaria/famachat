# ==============================================
# FAMACHAT - PRODUCTION DOCKER COMPOSE
# ==============================================
version: '3.8'

services:
  # ==============================================
  # POSTGRESQL DATABASE
  # ==============================================
  postgres:
    image: postgres:16-alpine
    container_name: famachat-postgres-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: famachat
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${PGPASSWORD:-IwOLgVnyOfbN}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - famachat-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d famachat"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # ==============================================
  # REDIS CACHE & SESSIONS
  # ==============================================
  redis:
    image: redis:7-alpine
    container_name: famachat-redis-prod
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - famachat-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # ==============================================
  # FAMACHAT APPLICATION
  # ==============================================
  famachat:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    container_name: famachat-app-prod
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Application
      NODE_ENV: production
      PORT: 5000
      APP_URL: https://${DOMAIN:-www.famachat.com.br}
      
      # Database - Internal container communication
      DATABASE_URL: postgresql://postgres:${PGPASSWORD:-IwOLgVnyOfbN}@postgres:5432/famachat
      PGHOST: postgres
      PGPORT: 5432
      PGDATABASE: famachat
      PGUSER: postgres
      PGPASSWORD: ${PGPASSWORD:-IwOLgVnyOfbN}
      
      # Redis - Internal container communication
      REDIS_URL: redis://redis:6379
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""
      REDIS_DB: 0
      
      # Security
      SESSION_SECRET: ${SESSION_SECRET:-EuCIxyXv8hgm64fhG2U8ytC3NoH59jsPxWaqwYFttMJI0mSNlSG1W73jbh2zu4+yUHLPecyaC5UMikeWz2B8qw==}
      JWT_SECRET: ${JWT_SECRET:-FamaChat2024SecretKeyForJWTTokenGeneration123456789}
      BCRYPT_ROUNDS: 12
      
      # External APIs
      EVOLUTION_API_URL: ${EVOLUTION_API_URL:-https://evolution.famachat.com.br}
      EVOLUTION_API_KEY: ${EVOLUTION_API_KEY:-IwOLgVnyOfbN}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-your_openai_api_key}
      GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY:-AIzaSyAzqIdg1EKaI8cmb2W4iC6NfJs_D8vgEYY}
      
      # Facebook
      FACEBOOK_APP_ID: ${FACEBOOK_APP_ID:-1600246764019855}
      FACEBOOK_APP_SECRET: ${FACEBOOK_APP_SECRET:-1600246764019855}
      FACEBOOK_PAGE_TOKEN: ${FACEBOOK_PAGE_TOKEN:-711015865662935}
      
      # Rate Limiting & Security
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      REQUEST_SIZE_LIMIT: 50mb
      URL_ENCODED_LIMIT: 50mb
      JSON_LIMIT: 10mb
      
      # Logging
      LOG_LEVEL: info
      LOG_FILE_ENABLED: true
      
    volumes:
      - uploads_data:/app/server/uploads
      - logs_data:/app/logs
    ports:
      - "5000:5000"
    networks:
      - famachat-network
      - traefik
      - network_public
    labels:
      # Traefik Configuration
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      
      # HTTP to HTTPS Redirect
      - "traefik.http.routers.famachat-http.rule=Host(`${DOMAIN:-www.famachat.com.br}`)"
      - "traefik.http.routers.famachat-http.entrypoints=web"
      - "traefik.http.routers.famachat-http.middlewares=redirect-to-https"
      
      # HTTPS Router
      - "traefik.http.routers.famachat.rule=Host(`${DOMAIN:-www.famachat.com.br}`)"
      - "traefik.http.routers.famachat.entrypoints=websecure"
      - "traefik.http.routers.famachat.tls.certresolver=letsencrypt"
      - "traefik.http.routers.famachat.middlewares=famachat-headers,famachat-compress"
      
      # Service
      - "traefik.http.services.famachat.loadbalancer.server.port=5000"
      - "traefik.http.services.famachat.loadbalancer.healthcheck.path=/api/system/health"
      - "traefik.http.services.famachat.loadbalancer.healthcheck.interval=30s"
      
      # Middlewares
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
      
      - "traefik.http.middlewares.famachat-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.famachat-headers.headers.customrequestheaders.X-Real-IP="
      - "traefik.http.middlewares.famachat-headers.headers.customresponseheaders.X-Frame-Options=DENY"
      - "traefik.http.middlewares.famachat-headers.headers.customresponseheaders.X-Content-Type-Options=nosniff"
      
      - "traefik.http.middlewares.famachat-compress.compress=true"
      
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/system/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

# ==============================================
# NETWORKS
# ==============================================
networks:
  famachat-network:
    driver: bridge
    name: famachat-network
  traefik:
    external: true
    name: traefik
  network_public:
    external: true
    name: network_public

# ==============================================
# VOLUMES
# ==============================================
volumes:
  postgres_data:
    driver: local
    name: famachat_postgres_data_prod
  redis_data:
    driver: local
    name: famachat_redis_data_prod
  uploads_data:
    driver: local
    name: famachat_uploads_data_prod
  logs_data:
    driver: local
    name: famachat_logs_data_prod