root@vmi1988871:/www/wwwroot/famachat# cd /www/wwwroot/famachat && ./deploy.sh www.famachat.com.br
üöÄ Iniciando deploy do FamaChat...
[INFO] Configurando deploy para dom√≠nio: www.famachat.com.br
[INFO] Verificando pr√©-requisitos...
[INFO] Pr√©-requisitos verificados ‚úÖ
[INFO] Configurando vari√°veis de ambiente...
[INFO] Vari√°veis de ambiente configuradas ‚úÖ
[INFO] Preparando inicializa√ß√£o do banco de dados...
[INFO] Scripts de inicializa√ß√£o criados ‚úÖ
[INFO] Configurando scripts de backup...
[INFO] Scripts de backup configurados ‚úÖ
[INFO] Construindo e iniciando servi√ßos...
[INFO] Parando servi√ßos existentes...
Remover imagens antigas do Docker? (y/N): y
[INFO] Removendo imagens antigas...

[INFO] Construindo aplica√ß√£o...
postgres uses an image, skipping
redis uses an image, skipping
Building famachat
[+] Building 179.1s (20/20) FINISHED                                          docker:default
 => [internal] load build definition from Dockerfile                                    0.0s
 => => transferring dockerfile: 1.90kB                                                  0.0s
 => [internal] load metadata for docker.io/library/node:20-alpine                       0.7s
 => [internal] load .dockerignore                                                       0.0s
 => => transferring context: 1.27kB                                                     0.0s
 => CACHED [production-deps 1/4] FROM docker.io/library/node:20-alpine@sha256:d3507a21  0.0s
 => [internal] load build context                                                       0.2s
 => => transferring context: 18.35kB                                                    0.1s
 => CACHED [production-deps 2/4] WORKDIR /app                                           0.0s
 => [runtime 2/9] RUN apk update && apk upgrade &&     apk add --no-cache     dumb-ini  8.3s
 => [production-deps 3/4] COPY package*.json ./                                         0.3s
 => [production-deps 4/4] RUN npm ci --only=production && npm cache clean --force      61.6s
 => [builder 4/6] RUN npm ci && npm cache clean --force                                70.2s
 => [runtime 3/9] RUN addgroup -g 1001 -S nodejs &&     adduser -S famachat -u 1001     2.7s
 => [runtime 4/9] WORKDIR /app                                                          0.1s 
 => [builder 5/6] COPY . .                                                              0.7s 
 => [builder 6/6] RUN npm run build                                                    74.7s 
 => [runtime 5/9] COPY --from=builder --chown=famachat:nodejs /app/dist ./dist          0.5s 
 => [runtime 6/9] COPY --from=production-deps --chown=famachat:nodejs /app/node_modul  11.9s 
 => [runtime 7/9] COPY --from=builder --chown=famachat:nodejs /app/package*.json ./     1.9s 
 => [runtime 8/9] COPY --from=builder --chown=famachat:nodejs /app/drizzle.config.ts .  0.3s 
 => [runtime 9/9] RUN mkdir -p /app/server/uploads &&     chown -R famachat:nodejs /ap  1.1s 
 => exporting to image                                                                 13.3s 
 => => exporting layers                                                                12.9s 
 => => writing image sha256:a452ecc31ee671aeb015d9049c73c04ebcbfed0acda67f16a988c54e19  0.0s 
 => => naming to docker.io/library/famachat_famachat                                    0.1s 
[INFO] Iniciando servi√ßos...                                                                 
WARNING: The Docker Engine you're using is running in swarm mode.

Compose does not use swarm mode to deploy services to multiple nodes in a swarm. All containers will be scheduled on the current node.

To deploy your application across the swarm, use `docker stack deploy`.

Creating network "famachat-network" with driver "bridge"
ERROR: Network traefik declared as external, but could not be found. Please create the network manually using `docker network create traefik` and try again.
root@vmi1988871:/www/wwwroot/famachat# 
root@vmi1988871:/www/wwwroot/famachat# 